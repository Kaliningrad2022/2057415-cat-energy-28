{"version":3,"sources":["gulpfile.js"],"names":["_gulp","_interopRequireDefault","require","_gulpPlumber","_gulpDartSass","_gulpPostcss","_autoprefixer","_postcssCsso","_gulpRename","_gulpTerser","_gulpLibsquoosh","_gulpSvgmin","_gulpSvgstore","_del","_browserSync","styles","gulp","src","sourcemaps","pipe","on","sass","logError","dest","browser","stream","html","copyImages","createWebp","webp","svg","sprite","inlineSvg","done","base","server","baseDir","init","cors","notify","reload","watcher","build","clean","series","watch","scripts","copy","optimizeImages","parallel"],"mappings":"wHAAA,IAAAA,MAAAC,uBAAAC,QAAA,SACAC,aAAAF,uBAAAC,QAAA,iBACAE,cAAAH,uBAAAC,QAAA,mBACAG,aAAAJ,uBAAAC,QAAA,iBACAI,cAAAL,uBAAAC,QAAA,iBACAK,aAAAN,uBAAAC,QAAA,iBACAM,YAAAP,uBAAAC,QAAA,gBANAO,YAAAR,uBAAAC,QAAA,gBAQAQ,gBAAAT,uBAAAC,QAAA,oBAPAS,YAAAV,uBAAAC,QAAA,gBASAU,cAAAX,uBAAAC,QAAA,kBARAW,KAAAZ,uBAAAC,QAAA,QAUAY,aAAAb,uBAAAC,QAAA,yFAIO,IAAMa,OAAS,WAXtB,OAAAC,MAAAA,QAAAC,IAAA,yBAAA,CAAAC,YAAA,IAaCC,MAAK,EAAAhB,aAAA,YAZNgB,MAAA,EAAAf,cAAA,WAAAgB,GAAA,QAAAC,cAAAA,QAAAC,WAcCH,MAAK,EAAAd,aAAA,SAAQ,EAbd,EAAAC,cAAA,cAeCa,KAAKH,MAAAA,QAAKO,KAAK,cAdhBJ,MAAA,EAAAd,aAAA,SAAA,EAAA,EAAAE,aAAA,cACAY,MAAA,EAAAX,YAAA,SAAA,kBAiBCW,KAAKH,MAAAA,QAAKO,KAAK,YAAa,CAAEL,WAAY,OAhB3CC,KAAAK,aAAAA,QAAAC,iCAsBA,IAAMC,KAAO,WACb,OAAOV,MAAAA,QAAKC,IAAI,iBACfE,KAAKH,MAAAA,QAAKO,KAAK,WAhBfJ,QAAK,WAQyBD,OAAAA,MAAAA,QAAAA,IAAY,uBAAdC,KAC5BA,MAAAA,QAAKK,KAAAA,aAXCL,KAcPK,aAAAA,QAAAC,WAEMC,eAAAA,WACN,OAAAV,MAAAA,QAAOA,IAAAA,6BADPG,MAKA,EAAAT,gBAAA,YAaCS,KAAKH,MAAAA,QAAKO,KAAK,eAVhBI,WAAOX,WAGN,OAEDA,MAAAA,QAAAC,IAAA,6BAUCE,KAAKH,MAAAA,QAAKO,KAAK,eAKVK,WAAa,WAPnB,OAAMD,MAAAA,QAAAA,IAAU,6BAChBR,MAAA,EAAAT,gBAAA,SAAOM,CAENa,KAED,MAOCV,KAAKH,MAAAA,QAAKO,KAAK,eAGhBO,IAAA,WAAA,OAGAd,MAAAA,QAAKC,IAAI,CAAC,mBAAoB,4BAC7BE,MAAK,EAAAR,YAAA,YAFNQ,KAAMW,MAAAA,QAAMP,KAAA,eAAZQ,OAAA,WAMA,OAAOf,MAAAA,QAAKC,IAAI,0BADhBE,MAAMY,EAAAA,YAAAA,YACNZ,MAAA,EAAAP,cAAA,SAAOI,CAGPgB,WAAAA,KAJAb,MAUA,EAAAX,YAAA,SAAA,eAHCW,KAAKH,MAAAA,QAAKO,KAAK,eAYfJ,KAAKH,SAAAA,GANNA,MAAAA,QAAKC,IAAI,CAOTgB,iCACC,gBALE,CACHC,KAAM,WASNf,KAAAH,MAAAA,QAAOO,KAAA,UACNU,KAMDE,MAAQ,WACRC,OAAAA,EAAAA,KAAAA,SAAAA,UAFAD,OAAA,SAAAF,GAAAT,aAAAA,QAAQa,KAAK,CAQbJ,OAAI,CACHG,QAED,SAPAE,MAAM,EASNC,QAAMC,EACNhB,IAAAA,IACAS,KAMAjB,OAAAA,SAAAA,GAPAQ,aAAAA,QAAQgB,SAQRxB,KAFMyB,QAAU,WAQTzB,MAAAA,QAAM0B,MAAK,wBAClBC,MAAAA,QADqBC,OAAA7B,SANrBC,MAAAA,QAAK6B,MAAM,sBAAuB7B,MAAAA,QAAK4B,OAAOE,UAC9C9B,MAAAA,QAAK6B,MAAM,gBAAiB7B,MAAAA,QAAK4B,OAAOlB,KAAMc,UAKjCE,MAAQ1B,MAAAA,QAAK4B,OAC1BD,MACAI,KACAC,eACAhC,MAAAA,QAAKiC,SACLlC,OACAW,KACAoB,QACAhB,IACAC,OACAH,8CAMeZ,MAAAA,QAAK4B,OACpBD,MACAI,KACApB,WACAX,MAAAA,QAAKiC,SACLlC,OACAW,KACAoB,QACAhB,IACAC,OACAH,YAEAZ,MAAAA,QAAK4B,OACLT,OACAM","file":"gulpfile.min.js","sourcesContent":["import gulp from 'gulp';\nimport plumber from 'gulp-plumber';\nimport sass from 'gulp-dart-sass';\nimport postcss from 'gulp-postcss';\nimport autoprefixer from 'autoprefixer';\nimport csso from 'postcss-csso';\nimport rename from 'gulp-rename';\nimport terser from 'gulp-terser';\nimport squoosh from 'gulp-libsquoosh';\nimport svgo from 'gulp-svgmin';\nimport svgstore from 'gulp-svgstore';\nimport del from 'del';\nimport browser from 'browser-sync';\n\n// Styles\n\nexport const styles = () => {\nreturn gulp.src('source/sass/style.scss', { sourcemaps: true })\n.pipe(plumber())\n.pipe(sass().on('error', sass.logError))\n.pipe(postcss([\nautoprefixer()]))\n.pipe(gulp.dest('build/css'))\n.pipe(postcss([csso()\n]))\n.pipe(rename('style.min.css'))\n.pipe(gulp.dest('build/css', { sourcemaps: '.' }))\n.pipe(browser.stream());\n}\n\n// HTML\n\nconst html = () => {\nreturn gulp.src('source/*.html')\n.pipe(gulp.dest('build'));\n}\n\n// Scripts\n\nconst scripts = () => {\nreturn gulp.src('source/js/script.js')\n.pipe(gulp.dest('build/js'))\n.pipe(browser.stream());\n}\n\n// Images\n\nconst optimizeImages = () => {\nreturn gulp.src('source/img/**/*.{png,jpg}')\n.pipe(squoosh())\n.pipe(gulp.dest('build/img'))\n}\n\nconst copyImages = () => {\nreturn gulp.src('source/img/**/*.{png,jpg}')\n.pipe(gulp.dest('build/img'))\n}\n\n// WebP\n\nconst createWebp = () => {\nreturn gulp.src('source/img/**/*.{png,jpg}')\n.pipe(squoosh({\nwebp: {}\n}))\n.pipe(gulp.dest('build/img'))\n}\n\n// SVG\n\nconst svg = () =>\ngulp.src(['source/img/*.svg', '!source/img/icons/*.svg'])\n.pipe(svgo())\n.pipe(gulp.dest('build/img'));\n\nconst sprite = () => {\nreturn gulp.src('source/img/icons/*.svg')\n.pipe(svgo())\n.pipe(svgstore({\ninlineSvg: true\n}))\n.pipe(rename('sprite.svg'))\n.pipe(gulp.dest('build/img'));\n}\n\n// Copy\n\nconst copy = (done) => {\ngulp.src([\n'source/fonts/**/*.{woff2,woff}',\n'source/*.ico',\n], {\nbase: 'source'\n})\n.pipe(gulp.dest('build'))\ndone();\n}\n\n// Clean\n\nconst clean = () => {\nreturn del('build');\n};\n\n// Server\n\nconst server = (done) => {\nbrowser.init({\nserver: {\nbaseDir: 'build'\n},\ncors: true,\nnotify: false,\nui: false,\n});\ndone();\n}\n\n// Reload\n\nconst reload = (done) => {\nbrowser.reload();\ndone();\n}\n\n// Watcher\n\nconst watcher = () => {\ngulp.watch('source/sass/**/*.scss', gulp.series(styles));\ngulp.watch('source/js/script.js', gulp.series(scripts));\ngulp.watch('source/*.html', gulp.series(html, reload));\n}\n\n// Build\n\nexport const build = gulp.series(\nclean,\ncopy,\noptimizeImages,\ngulp.parallel(\nstyles,\nhtml,\nscripts,\nsvg,\nsprite,\ncreateWebp\n),\n);\n\n// Default\n\nexport default gulp.series(\nclean,\ncopy,\ncopyImages,\ngulp.parallel(\nstyles,\nhtml,\nscripts,\nsvg,\nsprite,\ncreateWebp\n),\ngulp.series(\nserver,\nwatcher\n));\n"]}